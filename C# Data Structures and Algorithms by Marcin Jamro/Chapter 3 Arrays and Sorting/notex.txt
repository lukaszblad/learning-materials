Arrays
    the number of items in an array cannot be changed after initialization

    Single dimensional arrays
        declaration: int[] myNumbers;
        initialization: myNumbers = new int[5];
        indexing: int myNumber = myNumbers[2];

    Multi dimensional arrays
        declaration: int[,] myMatrix = new int[5,3];
        initialization: int[,] myMatrix = new int[,]
                        {
                            {1, 2, 3},
                            {3, 2, 1},
                            {2, 3, 1}
                        }
        indexing: myMatrixValue = myMatrix[1, 2];
    
    Jagged arrays
        single dimensional array, where each element is another array
        declaration: int[][] myNumbers = new int[4][];
        initialization: myNumbers[0] = [9, 5];
                        myNumbers[1] = [0, -3, 12];
                        myNumbers[3] = [54]
        indexing: myNumbers[1][2];

Sorting algorithms

    Selection sort
        the array is divided into 2 parts: sorted (empty at the beginning) and 
        unsorted (the entire array at the beginning). The algorithms loops over
        the entire unsorted part and the minimum value found is moved
        to the sorted part.

    Insertion sort
        it starts at the second position of the array and compares the selected
        value with the previosu position, if the compared value is smaller, than
        the previous one, they are swapped, until a smaller value is found.

    Bubble sort
        this algorithm compares adjacent values and it they are not in the correct
        order, it swaps them. This way the greate value bubbles in the last position
        at every iteration
        It is very inefficient, due to the amount of swaps

    Merge sort
        this algorithm recursively splits the array in half, until the array contains
        only one element which is sorted. Then the algorith merges the already
        sorted subarrays into the sorted array.
